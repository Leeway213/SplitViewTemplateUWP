<Page
    x:Class="SplitViewTemplate.Modules.MainFrame.View.FramePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SplitViewTemplate.Modules.MainFrame.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converter="using:SplitViewTemplate.Modules.MainFrame.Converter"
    xmlns:model="using:SplitViewTemplate.Modules.MainFrame.Model"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.Resources>
        <converter:NullableBooleanToBoolean x:Key="NullableBooleanToBoolean"/>
        <converter:SelectedIndexFrameConverter x:Key="SelectedIndexFrameConverter"/>
        <converter:SettingNaviConverter x:Key="SettingNaviConverter"/>
        <ControlTemplate x:Key="SplitViewTogglePaneButtonTemplate"
                         TargetType="ToggleButton">
            <Grid x:Name="RootGrid"
                  Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlForegroundBaseLowBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Checked"  />
                        <VisualState x:Name="CheckedPointerOver">
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="CheckedPressed">
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>


                <ContentPresenter x:Name="ContentPresenter"
                                  Padding="{TemplateBinding Padding}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  AutomationProperties.AccessibilityView="Raw"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTransitions="{TemplateBinding ContentTransitions}" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="SplitViewTogglePaneButtonStyle"
               TargetType="ToggleButton">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderBrush"
                    Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="UseSystemFocusVisuals"
                    Value="True" />

            <Setter Property="FontFamily"
                    Value="{ThemeResource SymbolThemeFontFamily}" />
            <Setter Property="Content"
                    Value="&#xE700;" />
            <Setter Property="Height"
                    Value="48" />
            <Setter Property="Width"
                    Value="48" />

            <Setter Property="FontWeight"
                    Value="Normal" />
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="Template"
                    Value="{StaticResource SplitViewTogglePaneButtonTemplate}" />
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideView">
                    <VisualState.Setters>
                        <Setter Target="splitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="splitViewToggle.IsChecked" Value="True"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="MediumView">
                    <VisualState.Setters>
                        <Setter Target="splitView.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="splitViewToggle.IsChecked" Value="False"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="550"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowView">
                    <VisualState.Setters>
                        <Setter Target="splitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="splitViewToggle.IsChecked" Value="False"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ToggleButton x:Name="splitViewToggle" Canvas.ZIndex="10"
                      HorizontalAlignment="Left" VerticalAlignment="Top"
                      IsChecked="{x:Bind Vm.IsPaneOpen, Mode=TwoWay}"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"/>

        <SplitView x:Name="splitView" 
                   IsPaneOpen="{x:Bind splitViewToggle.IsChecked,Mode=TwoWay,Converter={StaticResource NullableBooleanToBoolean}}"
                   PaneBackground="LightGray"
                   DisplayMode="{x:Bind Vm.SplitViewMode, Mode=TwoWay}">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="1" ItemsSource="{x:Bind Vm.NaviList, Mode=OneWay}" 
                                IsItemClickEnabled="True"
                                ItemClick="ListView_ItemClick"
                                SelectedItem="{x:Bind Vm.SelectedItem, Mode=TwoWay}"
                                SelectedIndex="{x:Bind Path=mainFrame.Content, Mode=OneWay, Converter={StaticResource SelectedIndexFrameConverter}}"
                                >
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="model:NaviListModel">
                                <StackPanel Orientation="Horizontal">
                                    <PathIcon Width="24" Data="{x:Bind Icon, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"></PathIcon>
                                    <TextBlock Text="{x:Bind Text, Mode=OneWay}" Margin="24,0,0,0" VerticalAlignment="Center" TextAlignment="Center" FontSize="20"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView Grid.Row="2" Margin="0,2,0,30" IsItemClickEnabled="True"
                              ItemClick="Setting_Click"
                              SelectedIndex="{x:Bind Path=mainFrame.Content, Mode=OneWay, Converter={StaticResource SettingNaviConverter}}">
                        <ListViewItem>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Symbol="Setting" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"></SymbolIcon>
                                <TextBlock Text="设置" Margin="24,0,0,0" VerticalAlignment="Center" TextAlignment="Center" FontSize="20"/>
                            </StackPanel>
                        </ListViewItem>
                    </ListView>
                </Grid>
            </SplitView.Pane>
            <Frame x:Name="mainFrame" Background="Azure">
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Navigated">
                        <core:InvokeCommandAction Command="{x:Bind Vm.FrameNavigatedCommand}"></core:InvokeCommandAction>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="Loaded">
                        <core:InvokeCommandAction Command="{x:Bind Vm.MainFrameLoadedCommand}"/>
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </Frame>
        </SplitView>
    </Grid>
</Page>
